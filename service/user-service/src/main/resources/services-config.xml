<?xml version="1.0" encoding="UTF-8"?>
<config>
<scanner>
 <packages-in-classes>
   <package-path>com.dawdler.user.service.impl</package-path>
 </packages-in-classes><!-- 需要扫描classes下的java包，支持antpath 如 com.anywide.shop.**.service.impl，被扫描的包中的组件会生效-->
</scanner>
<mybatis>
		<mappers>
			<mapper>classpath*:com/dawdler/user/dao/xml/*.xml</mapper>
		</mappers>
	</mybatis>
<datasource-expressions>
		<datasource-expression id="test1" latent-expression="write=[user_writeDataSource],read=[user_readDataSource|user_readDataSource]" /><!-- 
		数据源表达式配置 id为标识 latent_expression为读写配置 其中write为写连接 read为读连接 读连接可以配置多个用|分开 
		轮询方式调用 -->
		
	</datasource-expressions>
	<decisions>
		 <!-- mapping 需要注入数据源的service包   latent-expression 为数据源表达式配置中的id -->
<decision mapping="com.dawdler.user.service.impl" latent-expression="test1" />
	</decisions>
</config>
